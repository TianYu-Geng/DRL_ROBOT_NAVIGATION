<launch>

  <!-- 启动参数 -->
  <arg name="world_name" default="$(find multi_robot_scenario)/launch/TD3.world"/>
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="verbose" default="false"/>
  
  <!-- 机器人参数 -->
  <arg name="robot_name" default="r1"/>
  <arg name="robot_position" default="-x 0.0 -y 0.0 -z 0.01"/>

  <!-- 启动 Gazebo 并加载 TD3 世界 -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_name)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="verbose" value="$(arg verbose)"/>
  </include>

  <!-- 加载机器人模型到参数服务器 -->
  <param name="robot_description" command="$(find xacro)/xacro '$(find multi_robot_scenario)/xacro/p3dx/pioneer3dx.xacro'" />

  <!-- 在 Gazebo 中生成机器人 -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" 
        args="-urdf -model $(arg robot_name) -param robot_description $(arg robot_position)"/>

  <!-- 启动机器人状态发布器 -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0"/>
    <remap from="/joint_states" to="/$(arg robot_name)/joint_states"/>
  </node>
  
  <!-- 启动关节状态发布器 -->
  <node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher">
    <param name="publish_frequency" type="double" value="30.0"/>
    <remap from="/joint_states" to="/$(arg robot_name)/joint_states"/>
  </node>


  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find multi_robot_scenario)/launch/pioneer3dx.rviz" required="false"/>


</launch>
